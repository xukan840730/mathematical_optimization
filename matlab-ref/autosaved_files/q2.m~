%% 1-D mountain glacier flow model  
clear all
close all
%% set time and space dimensions

dlength=100000;                         %set total domain length (meters)
dx=1000;                                   %set model resolution (meters)     
nx=floor(dlength/dx)+1;           %calculate number of grid cells needed
run_length=200000;                 %set run length (years)

dt=1./24.;                                  %set timestep (years)    
nt=floor(run_length/dt)+1;        %calculate number of timesteps to take

%% preallocate arrays
melt=zeros(nx,1);       %melt contribution to mass balance
accum=zeros(nx,1);    %accumulation contribution to mass balance
smb=zeros(nx,1);       %net surface mass balance
bed_elev=zeros(nx,1);%ice bed elevation (meters above sea level (ASL))
thk=zeros(nx,1);         %ice thickness
elev=zeros(nx,1);        %surface elevation (bed elevation + ice thickness)
T_elev=zeros(nx,1);    %surface air temperature
T_sealev=zeros(nt,1);
vol=zeros(nt,1);          %total ice volume (assuming unit glacier width of 1 m)
dVdt=zeros(nt,1);
temp=zeros(nt,1);

rhoice=912.;
rhomant=3300.;
tau_relax=2000.;
%% Define the bed elevation at all points, in units of meters above sealevel (ASL).
bed_elev(1:nx)=linspace(2000,2000,nx);                  %a bed rising from 1 km to 2 km ASL.
bed_elev(1:20)=linspace(3000,3000,20);
bed_elev(21:24)=linspace(3000,2000,4);
%save bed elevation for isostatic model
bed_elev_init=bed_elev;
% Set initial ice elevation to 0.
elev=bed_elev+thk;
%% Load restart file to overwrite default values set above.  
%If you want to continue running from the saved state of a previous simulation.
%load restart.mat
  
%% Iterative timestepping loop
T_sealev=linspace(10,5,nt);
milank_sin=linspace(1,run_length,nt);
milank_sin=2*sin(milank_sin/10000.*2.*pi);
T_sealev=T_sealev+milank_sin;
plot(T_sealev)
tt=1;
equilib_crit=1.;
counter=0.;
dVdtavg=0.;

%% Set accumulation array

while tt<nt;
  tt=tt+1;
  %tt/nt*100 %echo the percent of run completed
  lapse_rate=-.006;          %C/m
  PDD_factor=-2;            %m/yr/C    
  T_var=12;                 % imposed seasonal variance amplitude (C)   
  ssr=sin(tt*dt*2*pi);   %sin of season, in radians
  T_elev=T_sealev(tt) + ssr*T_var + elev.*lapse_rate;  %elevated air temp C
  
  %generate a new mass balance field as a function of surface temperature          
%   melt(:)=0.;
%   i=find(T_elev>0);
%   melt(i)=(T_elev(i).*PDD_factor);  %melt rate (m/yr ice)
  
      %generate ablation as a function of surface temperature          
    melt(:)=0.;
    accum(:)=0.5;
    i=find(T_elev>0);
    melt(i)=(T_elev(i).*PDD_factor);  %melt rate (m/yr ice)
    accum(i)=0.;
  
  smb=accum+melt; %net mass balance rate (m/yr ice)
  %Run ice evolution timestep, return updated ice thickness and surface elevation fields, and total ice volume. 
  [thk]=evolve_ice(thk,bed_elev,smb,nx,dx,dt);
  %Calculate total ice volumethk
  vol(tt)=sum(thk)*dx;
  
  %%Newtonian damping
  %%Calculate isostatic adjustment to bed elevation: assume initial ice
  %%free state was in isostatic equilibrium.  An ice load will act to
  %%eventually depress the bed elevation by the mantle-equivalent thickness of the
  %%ice load, once fully equilibrated.  Calculate this equilibrium
  %%adjustment here:
  bed_elev_equilib=bed_elev_init-thk*(rhoice/rhomant);
  %%Next, nudge the bed elevation towards this equilibrium bed elevation 
  bed_elev=bed_elev-(bed_elev-bed_elev_equilib)/tau_relax*dt;
  
  elev=thk+bed_elev;
end
%%
%for n=1:floor(nt*dt)-(1/dt*10)
%    ii=n/dt+1;
%    jj=n/dt+1/dt;
%volann(n)=mean(vol(ii:jj));   
%n/floor(nt*dt)*100
%end
%dvoldt=volann(2:end)-volann(1:end-1);
%plot(dvoldt)
%%

clf
rl=run_length/1000.; %kyr
time=linspace(0,rl,nt)';
ha=tight_subplot(2,1,0.01,[.1 .01],[.1 .01]);
axes(ha(1)); plot(time,vol,'k','Linewidth',2);
axis tight
set(ha(1),'xticklabel','');
ylabel('Volume (m^3)');
axes(ha(2)); plot(time,T_sealev-mean(T_sealev),'k','Linewidth',2); axis tight; title('');
ylabel('Sealevel temperature anomaly (C)');
xlabel('time (kyr)')
display('Run done')

save restart.mat bed_elev elev thk vol