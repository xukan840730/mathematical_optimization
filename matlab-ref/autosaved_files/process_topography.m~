function [CESMtopotile,GLOBEtopotile] = process_topography(f,lat_range,array_size,sf,offset)

disp(['Processing GLOBE tile ' f])
fid=fopen(fullfile('all10',f));
GLOBEtopotile=fread(fid,array_size,'*uint16','l')';
GLOBEtopotile(GLOBEtopotile>20000)=nan;
test=zeros(size(GLOBEtopotile));
test=isnan(GLOBEtopotile))=1;
figure
imagesc(test)
fclose(fid);
error('stop')
%% Generate latitude weighting

%generate the cos of the latitude at the middle of each GLOBE cell
coslat=cos ( deg2rad(linspace(lat_range(2)-offset,lat_range(1)+offset,size(GLOBEtopotile,1))) )';
%replicate this coslat array across all longitudes
coslat=repmat(coslat,1,size(GLOBEtopotile,2));
coslat(isnan(GLOBEtopotile))=nan; %nan out coslan values that are ocean (from nan operation on GLOBEtopo

%% Aggregate to coarse grid

CESMtopotile=zeros(size(GLOBEtopotile)./sf); %size reduction set by scale factor (sf, here)

for i=1:size(CESMtopotile,1);
    disp(['Tile processing complete (%)' num2str(i/size(CESMtopotile,1)*100)])
    for j=1:size(CESMtopotile,2);
        is=(i-1).*sf + 1;
        ie = is + sf - 1;
        js=(j-1).*sf + 1;
        je = js + sf -1;
        subtopoarr=single(GLOBEtopotile( is:ie , js:je )); %extract GLOBE topography square that underlies CESM grid cell
        subcoslatarr=coslat( is:ie , js:je );
        
        CESMtopotile(i,j)=nansum(subtopoarr(:).*subcoslatarr(:)) ./ nansum(subcoslatarr(:)); %area-weight data by latitude
        
    end
end

